spring.application.name=detection
spring.datasource.url=jdbc:mysql://localhost:3306/detection
spring.datasource.username=root
spring.datasource.password=Benaissa2003!
#  ${DB_PASSWORD}





# ====== JPA / Hibernate Configuration ======
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# ====== Server Configuration (optionnel) ======
server.port=8090

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=alert-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Autorise la création automatique des topics
spring.kafka.producer.properties.allow.auto.create.topics=true

# Configuration alternative pour créer les topics au démarrage
spring.kafka.admin.properties.auto.create.topics.enable=true